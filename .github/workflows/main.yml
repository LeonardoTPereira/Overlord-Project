name: Build and Test

on:
  pull_request:
    branches:
      - master
      - develop

env:
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}

jobs:   
  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    # available list of containers here:
    # https://hub.docker.com/r/unityci/editor/tags?page=1&ordering=last_updated&name=ubuntu-2020.1.17f1-base
    container: unityci/editor:ubuntu-2020.3.16f1-webgl-0.15.0
    env:
      DOTNET_ROOT: '/opt/unity/Editor/Data/NetCore/Sdk-2.2.107'

    steps:
      
      - name: Activate unity
      # exit code is 1 for manual activation
        continue-on-error: true
        run: |          
          echo "$UNITY_LICENSE" | tr -d '\r' > UnityLicenseFile.ulf
          unity-editor -nographics -logFile /dev/stdout -manualLicenseFile UnityLicenseFile.ulf -quit | echo "Activation finished"
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Update
        run: apt update
        
      - name: Install JDK
        run: apt install -y openjdk-11-jre-headless
        
      - name: Install Sonar Scanner
        run: $DOTNET_ROOT/dotnet tool install dotnet-sonarscanner --tool-path . --version 5.4.0

      - name: Cache Library
        id: cache-library
        uses: actions/cache@v2
        with:
          path: Library
          key: Library-2020.3.16
          restore-keys: |
            Library-build-
            Library-
      
      - name: Download previous build
        uses: actions/download-artifact@v2
        with:
          name: build-WebGL
          path: build/WebGL
        
      - name: Run editor Tests
        run: unity-editor -nographics -logFile /dev/stdout -runTests -testPlatform editmode -testResults Tests/editmode-results.xml -enableCodeCoverage -coverageResultsPath Tests -debugCodeOptimization 
        timeout-minutes: 20
        
      - name: Run play Tests
        run: unity-editor -nographics -logFile /dev/stdout -runTests -testPlatform playmode -testResults Tests/playmode-results.xml -enableCodeCoverage -coverageResultsPath Tests -debugCodeOptimization 
        timeout-minutes: 20
      
      - name: Archive test results
        uses: actions/upload-artifact@v2.3.1
        if: always()
        with:
          name: Test results
          path: Tests
      
      - name: Publish test results
        uses: MirageNet/nunit-reporter@v1.0.11
        if: always()
        with:
          path: "Tests/*.xml"
          access-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate Solution
        run: unity-editor -nographics -logFile /dev/stdout -customBuildName Overlord-Project -projectPath . -executeMethod  UnityEditor.SyncVS.SyncSolution -quit
        
      - name: SonarQube analysis
        env:
          FrameworkPathOverride: /opt/unity/Editor/Data/MonoBleedingEdge/
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ls -l
          ./dotnet-sonarscanner begin \
            /o:leonardotpereira \
            /k:LeonardoTPereira_Overlord-Project \
            /n:Overlord-Project \
            /d:sonar.verbose=false \
            /d:sonar.login=$SONAR_TOKEN \
            /d:sonar.host.url=https://sonarcloud.io \
            /d:sonar.cpd.exclusions=Assets/Tests/** \
            /d:sonar.coverage.exclusions=Assets/Tests/** \
            ${{ steps.semantic.outputs.new_release_published == 'true' && format('/v:{0}',steps.semantic.outputs.new_release_version) || '' }} \
            /d:sonar.cs.nunit.reportsPaths=Tests/editmode-results.xml,Tests/playmode-results.xml \
            /d:sonar.cs.opencover.reportsPaths=Tests/Overlord-Project-opencov/EditMode/TestCoverageResults_0000.xml,Tests/Overlord-Project-opencov/PlayMode/TestCoverageResults_0000.xml
          $DOTNET_ROOT/dotnet build Overlord-Project.sln
          ./dotnet-sonarscanner end /d:sonar.login=$SONAR_TOKEN
          
        - name: Upload Build

  buildWebGL:
    needs: sonarcloud
    name: Build for WebGL üñ•Ô∏è
    runs-on: ubuntu-latest
    strategy:
        fail-fast: false
    steps:
      - name: Restore Library cache
        uses: actions/cache@v2
        with:
          path: Library
          key: Library-2020.3.16
          restore-keys: |
            Library-build-
            Library-
      
      - name: Build WebGL
      - uses: game-ci/unity-builder@v2
        with:
          targetPlatform: WebGL

      - name: Upload Build as Artifact
      - uses: actions/upload-artifact@v2
        with:
          name: build-WebGL
          path: build/WebGL
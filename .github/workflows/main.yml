name: Build and Test

on:
  pull_request:
    branches:
      - master
      - develop

env:
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}

jobs:   
  sonarcloud:
    name: Sonar Cloud Validation
    runs-on: windows-latest
    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"LeonardoTPereira_Overlord-Project" /o:"leonardotpereira" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
          dotnet build Overlord-Project.sln
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
    #testRunner:
    #    needs: sonarcloud
    #    name: Test in ${{ matrix.testMode }} ‚ú®
    #    runs-on: ubuntu-latest
    #    strategy:
    #        fail-fast: false
    #        matrix:
    #            testMode:
    #              - EditMode
    #              - PlayMode
    #    steps:
    #        - name: Checkout code
    #          uses: actions/checkout@v2
    #          
    #        - name: Restore Library cache
    #          uses: actions/cache@v2
    #          with:
    #            path: Library
    #            key: Library-test-project-${{ matrix.targetPlatform }}
    #            restore-keys: |
    #                Library-test-project-
    #                Library-
    #                
    #        - uses: game-ci/unity-test-runner@v2.0-alpha-5
    #          id: testRunner
    #          with:
    #            testMode: ${{ matrix.testMode }}
    #            checkName: ${{ matrix.testMode }} test results
    #            githubToken: ${{ secrets.GITHUB_TOKEN }}
    #
    #        - uses: actions/upload-artifact@v2
    #          with:
    #            name: Test results (${{ matrix.testMode }})
    #            path: ${{ steps.testRunner.outputs.artifactsPath }}

  buildWebGL:
    needs: sonarcloud
    name: Build for WebGL üñ•Ô∏è
    runs-on: ubuntu-latest
    strategy:
        fail-fast: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Restore Library cache
        uses: actions/cache@v2
        with:
          path: Library
          key: Library-build-WebGL
          restore-keys: |
            Library-build-
            Library-
      - uses: game-ci/unity-builder@v2
        with:
          targetPlatform: WebGL

      - uses: actions/upload-artifact@v2
        with:
          name: build-WebGL
          path: build/WebGL

      # Output
      - uses: actions/upload-artifact@v2
        with:
          name: Build
          path: build